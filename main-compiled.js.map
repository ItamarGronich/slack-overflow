{"version":3,"sources":["main.js"],"names":[],"mappings":"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","file":"main-compiled.js","sourcesContent":["var btnRefresh = document.querySelector('#refresh'),\n    btnPost = document.querySelector('#post'),\n    btnDelete = document.querySelector('#delete'),\n    btnChange = document.querySelector('#change'),\n    DONE = 4,\n    OK = 200;\n\n// disables form default validation mechanisms.\nfunction validateMyForm(){\n    return false;\n}\n\n\n/**\n * AJAX Request function with callback and optional request headers.\n * @param request      - type of request. accepts 'GET', 'POST', 'PUT' & 'DELETE'\n *\n * @param url          - path on the server:\n *                       GET    = https://hidden-headland-7200.herokuapp.com/\n *                       POST   = https://hidden-headland-7200.herokuapp.com/new/\n *                       PUT    = https://hidden-headland-7200.herokuapp.com/edit/<_id-number-here>\n *                       DELETE = https://hidden-headland-7200.herokuapp.com/delete/<_id-number-here>\n *\n * @param callback     - function to execute on readyState === 4 (DONE).\n *\n * @param body         - the body of the request. accepts empty, null and JSON string.\n *       (optional)\n *\n * @param headers      - request headers. if needed, syntax is a single string separated\n *       (optional)      by a colon ':'. In example - <code>'Content-Type:application/json'</code>\n *                       multiple request headers is handled with array of same syntaxed strings.\n *\n * @param responseType - a string of expected response types. can be left blank defaults to 'json'\n *       (optional)\n */\nfunction ajax(request, url, callback, body, headers, responseType){\n    // 7nth param is the onclick event.\n    // stops it from bubbling to the <form>\n    arguments[6].stopPropagation();\n\n    var xhr  = new XMLHttpRequest(),\n        args;\n\n    // open request\n    xhr.open(request, url);\n\n    // set request headers based on typeof headers.\n    //if headers is a string. This means that there's only one request header to set\n    if ( typeof headers === 'string' && !!headers){\n        //split strings into arguments array. always a length of 2.\n        args = headers.split(':');\n\n        // set headers based on the array.\n        xhr.setRequestHeader(args[0], args[1]);\n    }\n\n    // if headers is an array. This means that there's more than one request header to set\n    else if( headers instanceof Array ){\n\n        // loop over all setRequestHeader arguments\n        headers.forEach(function(el){\n            if (typeof el === 'string'){\n\n                //split every arument to an aray of the two arguments required for setRequestHeader\n                args = el.split(\":\");\n\n                // evoke setRequestHeader for each of the arguments supplied.\n                xhr.setRequestHeader(args[0], args[1]);\n        }});\n\n    }\n\n    // setting expected response type. defaults to 'json'\n    xhr.responseType = responseType || 'json';\n\n    xhr.onreadystatechange = function(){\n\n        // if DONE and OK\n        if(xhr.readyState === DONE && xhr.status === OK){\n            console.log(xhr.response.message);\n            callback(xhr); // evoke callback with xhr object as first argument.\n\n        // if DONE but not OK\n        } else if (xhr.readyState === DONE && xhr.status !== OK){\n            console.log('bad request');\n        }\n    };\n\n    // sends the request.\n    // if body exists and or it's a null => send request with specified body\n    // else send request with no body\n    body || body === null ? xhr.send(body) : xhr.send();\n\n    console.log('request ' + request + ' has been sent');\n}\n\n\n/*\n* ================================================================================================================\n*                                           Refresh button event\n* ================================================================================================================\n* */\n                    // arrow function is to prevent ajax(); from firing until event dispatches\n                    // also an 'event parmeter is sent with the arrow function and is passed as the '\n                    // last argument to ajax(); function.\nbtnRefresh.onclick = event => {ajax('GET', 'https://hidden-headland-7200.herokuapp.com/', function(xhr){\n    // the json object with\n    // an array of object messages\n    var messages = xhr.response,\n\n    // string that will later be concatenated into the\n    // innerHTML.\n        string = '',\n\n    // caching the <section class=\"msgBoard\"> tag.\n        msgBoard = document.querySelector('.msgBoard');\n\n    // looping over all the message objects\n    for (var i = 0; i < messages.length; i++){\n        string += '<article class=\"msg\"><h1>' + messages[i].name + '</h1><p> ID:' + messages[i]._id + '</p><p>' + messages[i].message + '</p></article>';\n    }\n\n    // assigning messages to msgBoard\n    msgBoard.innerHTML = string;\n},'','','',event)};\n\n\n/*\n * ================================================================================================================\n *                                           Post button event\n * ================================================================================================================\n * */\n\nbtnPost.onclick = event => {ajax('POST', 'https://hidden-headland-7200.herokuapp.com/new', function(xhr){\n    var feedback = xhr.response.message;\n    console.log(\"message status: \" + feedback);\n\n    // upon success simulates click event on refresh button to load new posts\n    btnRefresh.click();\n\n    //body argument                                                    headers argument   responseType argument\n},'{\"message\":\"'+ msgBody.value + '\",\"name\":\"' + usrName.value +'\"}','Content-Type:application/json','json',event)};\n\n\n/*\n * ================================================================================================================\n *                                           Delete button event\n * ================================================================================================================\n * */\n\nbtnDelete.onclick = event => {ajax('DELETE', ('https://hidden-headland-7200.herokuapp.com/delete/' + msgId.value), function(xhr){\n    var feedback = xhr.response.message;\n    console.log(\"message status: \" + feedback);\n    btnRefresh.click();\n\n},'','Content-Type:application/json','json',event)};\n\n\n/*\n * ================================================================================================================\n *                                           Edit button event\n * ================================================================================================================\n * */\n\nbtnChange.onclick = event => {ajax('PUT', ('https://hidden-headland-7200.herokuapp.com/edit/' + msgId.value), function(xhr){\n    var feedback = xhr.response.message;\n    console.log(\"message status: \" + feedback);\n    btnRefresh.click();\n\n},'{\"message\":\"'+ msgBody.value + '\",\"name\":\"' + usrName.value +'\"}','Content-Type:application/json','json',event)};\n"]}